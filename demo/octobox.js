let config={rootPath:""};const buildConfigRootPath=async()=>{const t=require("fs-extra");await(async()=>{let n=await t.readJson(`${__dirname}/package.json`);config.rootPath=n.homepage,config.rootPath.endsWith("/")&&(config.rootPath=config.rootPath.substring(0,config.rootPath.length-1))})().catch(t=>console.log(t))},buildRoutes=async()=>{const t=require("fs-extra"),n=require("fast-glob"),o=require("replaceall");await(async()=>{try{const e=(await n("src/pages/**/{Index.{tsx,jsx},[[]*.{tsx,jsx}}")).map(t=>{let n=t.replace("src/pages/","");t=n.endsWith(".tsx")?n.substring(0,n.length-4):n,n.endsWith("Index.tsx")&&(n=n.substring(0,n.length-10)),n.endsWith(".tsx")&&(n=n.substring(0,n.length-4)),n=o("[...","*",n),n=o("[",":",n),n=o("]","",n);for(const t of n)if("*"===t){const o=n.substring(n.indexOf(t));o.substring(1,o.indexOf("/")),n=n.replace(o,"")}return n.endsWith("/")||(n+="/"),n.startsWith("/")||(n=`/${n}`),n.toLowerCase(),{path:n,component:`./pages/${t}`}});let a=await t.readFile(`${__dirname}/src/Router.tsx`);const s=(a=a.toString()).substring(a.indexOf("// routes-begin"),a.indexOf("// routes-end"));let i="// routes-begin\n// AUTO-GENERATED SECTION - DO NOT EDIT";if(e.length>0){for(const t of e)i+=`\nimport page${e.indexOf(t)} from "${t.component}";`;i+="\nconst routes = [ ";for(const t of e){const n=e.indexOf(t);i+=`{ path: "${t.path}", component: page${n} }, `}i=i.substring(0,i.length-2),i+=" ];",i+="\n"}else i+="\nconst routes = null;\n";i+=`const appBasename = "${config.rootPath}";\nexport { appBasename };\n`;const r=o(s,i,a);await t.writeFile(`${__dirname}/src/Router.tsx`,r)}catch(t){console.log(t)}})().catch(t=>console.log(t))},buildStaticNotFoundPage=async()=>{const t=require("fs-extra"),n=require("replaceall");await(async()=>{let o={};config.rootPath.startsWith("/")?o.rootPath=config.rootPath.substring(1):o.rootPath=config.rootPath;const e=o.rootPath.split("/").length;(o.rootPath.split("/")[o.rootPath.split("/").length-1]="")&&e--;let a=await t.readFile(`${__dirname}/public/404.html`);const s=(a=a.toString()).substring(a.indexOf("// path-begin"),a.indexOf("// path-end"));let i="// path-begin\n    // AUTO-GENERATED SECTION - DO NOT EDIT\n";const r=n(s,i+=`    var pathSegmentsToKeep = ${e};\n    `,a);await t.writeFile(`${__dirname}/public/404.html`,r)})().catch(t=>console.log(t))},runScripts=async()=>{await buildConfigRootPath(),await buildRoutes(),await buildStaticNotFoundPage()};runScripts().catch(t=>console.log(t));