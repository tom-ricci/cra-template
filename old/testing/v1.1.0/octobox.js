const args=process.argv.slice(2);if("add"===args[0]||"unlink"===args[0]||"change"===args[0]){let t={rootPath:""};const e=async()=>{const e=require("fs-extra");await(async()=>{let n=await e.readJson(`${__dirname}/package.json`);t.rootPath=n.homepage,t.rootPath.endsWith("/")&&(t.rootPath=t.rootPath.substring(0,t.rootPath.length-1))})().catch(t=>console.log(t))},n=async()=>{const e=require("fs-extra"),n=require("fast-glob"),s=require("replaceall");await(async()=>{try{const o=(await n("src/pages/**/{Index.{tsx,jsx},[[]*.{tsx,jsx}}")).map(t=>{let e=t.replace("src/pages/","");t=e.endsWith(".tsx")?e.substring(0,e.length-4):e,e.endsWith("Index.tsx")&&(e=e.substring(0,e.length-10)),e.endsWith(".tsx")&&(e=e.substring(0,e.length-4)),e=s("[...","*",e),e=s("[",":",e),e=s("]","",e);for(const t of e)if("*"===t){const n=e.substring(e.indexOf(t));n.substring(1,n.indexOf("/")),e=e.replace(n,"")}return e.endsWith("/")||(e+="/"),e.startsWith("/")||(e=`/${e}`),e.toLowerCase(),{path:e,component:`./pages/${t}`}});let a=await e.readFile(`${__dirname}/src/Router.tsx`);const r=(a=a.toString()).substring(a.indexOf("// routes-begin"),a.indexOf("// routes-end"));let i="// routes-begin\n// AUTO-GENERATED SECTION - DO NOT EDIT";if(o.length>0){for(const t of o)i+=`\nimport page${o.indexOf(t)} from "${t.component}";`;i+="\nconst routes = [ ";for(const t of o){const e=o.indexOf(t);i+=`{ path: "${t.path}", component: page${e} }, `}i=i.substring(0,i.length-2),i+=" ];",i+="\n"}else i+="\nconst routes = null;\n";i+=`const appBasename = "${t.rootPath}";\nexport { appBasename };\n`;const c=s(r,i,a);await e.writeFile(`${__dirname}/src/Router.tsx`,c)}catch(t){console.log(t)}})().catch(t=>console.log(t))},s=async()=>{const e=require("fs-extra"),n=require("replaceall");await(async()=>{let s={};t.rootPath.startsWith("/")?s.rootPath=t.rootPath.substring(1):s.rootPath=t.rootPath;let o=s.rootPath.split("/").length;""===s.rootPath.split("/")[s.rootPath.split("/").length-1]&&o--;let a=await e.readFile(`${__dirname}/public/404.html`);const r=(a=a.toString()).substring(a.indexOf("// path-begin"),a.indexOf("// path-end"));let i="// path-begin\n    // AUTO-GENERATED SECTION - DO NOT EDIT\n";const c=n(r,i+=`    var pathSegmentsToKeep = ${o};\n    `,a);await e.writeFile(`${__dirname}/public/404.html`,c)})().catch(t=>console.log(t))},o=async()=>{await e(),await n(),await s()};console.log("Defining routes..."),o().then(console.log("Routes defined!")).catch(t=>console.log(t))}